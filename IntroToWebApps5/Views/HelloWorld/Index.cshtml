<h1 align="center" style="background-color:#212F3D;color:#FBFCFC;">
    About Me
    <p align="Right">
        Name - Abhi Patel <br>
        Student number - 040978822<br>
        Email address - pate0789@algonquinlive.com<br>
    </p>
</h1>

<h2 style="background-color:#D5D8DC;">
    Hello, I am Computer Science Student at Algonquin College.
    I am in Level 5. I am an international Student and I am here from last 2 year.
    I am student as well as I do part time job.My hobbies are Cricket, Football and watching Netflix.
</h2>


<h2>
    <br>
    My expectation from cource "CST8359"
</h2>
<table style="border:1px solid black;width:100%">
    <tr style="border:1px solid black;">
        <td style="border:1px solid black;">
            <b>
                * Learning c#<br>
            </b>• An introduction with splashes of advanced syntax and ideas</b><br>
        </td>
        <td style="border:1px solid black;">
            * ASP.NET MVC Core<br>
            • This is where we will spend most of our time<br>
            • Basic and Advanced Web Applications<br>
        </td>
        <td style="border:1px solid black;">
            <b>* Entity Framework</b><br>
            • The data layer used to communicate data to and from databases.<br>
        </td>
        <td style="border:1px solid black;">
            <b>* Windows Azure</b><br>
            • Web Sites<br>
            • Azure SQL<br>
            • Azure data storage<br>
        </td>
    </tr>
</table>
My favorite thing to learn in this course is c# language. As i am progrmmer, I love to learn new language which help in future to get better job oppurtunity.
<br>
<br />
<h2 align="Left">a. Question list:</h2>
<b>
    1. C# is a strongly or loosely typed language?<br>
    Ans
</b> -  C# is for the most part a statically typed language, because the compiler determines facts about the types of every expression. C# is for the most part a type safe language because it prevents values of one static type from being stored in variables of an incompatible type (and other similar type errors).
<br>
<br>
<b>
    2. What is a ‘Property’ in C# as it relates to classes and objects<br>
    Ans
</b> - Class - Property in C# is a member of a class that provides a flexible mechanism for classes to expose private fields. Internally, C# properties are special methods called accessors. A C# property have two accessors, get property accessor and set property accessor. A get accessor returns a property value, and a set accessor assigns a new value. The value keyword represents the value of a property.
<br>
Object- In C#, Object is a real world entity, for example, chair, car, pen, mobile, laptop etc.
In other words, object is an entity that has state and behavior. Here, state means data and behavior means functionality. In C#, Object is a real world entity, for example, chair, car, pen, mobile, laptop etc. In other words, object is an entity that has state and behavior. Here, state means data and behavior means functionality. Object is a runtime entity, it is created at runtime. Object is an instance of a class. All the members of the class can be accessed through object. Let's see an example to create object using new keyword.
<br>
<br>

<b>
    3. Describe the MVC design pattern.<br>
    Ans
</b> - The Model View Controller (MVC) design pattern specifies that an application consist of a data model, presentation information, and control information. The pattern requires that each of these be separated into different objects.

MVC is more of an architectural pattern, but not for complete application. MVC mostly relates to the UI / interaction layer of an application. You’re still going to need business logic layer, maybe some service layer and data access layer.
<br>
<br>
<b>
    4. Compare ASP.NET WebForms to ASP.NET MVC<br>
    Ans
</b> - <table align="Center" style=" border:1px solid black;width:80%;"><tr style="border:1px solid black;"><td style="border:1px solid black;">Asp.Net Web Forms</td><td style="border:1px solid black;">Asp.Net MVC</td></tr><tr style="border:1px solid black;"><td style="border:1px solid black;">Asp.Net Web Form follow a traditional event-driven development model.</td><td style="border:1px solid black;">Asp.Net MVC is a lightweight and follows MVC (Model, View, Controller) pattern based development, model.</td></tr><tr style="border:1px solid black;"><td style="border:1px solid black;">Asp.Net Web Form has server controls.</td><td>Asp.Net MVC has HTML helpers.</td></tr><tr style="border:1px solid black;"><td style="border:1px solid black;">Asp.Net Web Form supports view state for state management at the client side.</td><td style="border:1px solid black;">Asp.Net MVC does not support view state.</td></tr><tr style="border:1px solid black;"><td style="border:1px solid black;">Asp.Net Web Form has file-based URLs means file name exist in the URLs must have its physical existence.</td><td style="border:1px solid black;">Asp.Net MVC has route-based URLs means URLs are divided into controllers and actions and moreover it is based on controller not on physical file.</td></tr></table>
<br>
<br>
<b>
    5. What is .NET Core?<br>
    Ans
</b> - .NET Core is a new version of .NET Framework, which is a free, open-source, general-purpose development platform maintained by Microsoft. It is a cross-platform framework that runs on Windows, macOS, and Linux operating systems.

.NET Core Framework can be used to build different types of applications such as mobile, desktop, web, cloud, IoT, machine learning, microservices, game, etc.

.NET Core is written from scratch to make it modular, lightweight, fast, and cross-platform Framework. It includes the core features that are required to run a basic .NET Core app. Other features are provided as NuGet packages, which you can add it in your application as needed. In this way, the .NET Core application speed up the performance, reduce the memory footprint and becomes easy to maintain.

 NET Core is used to create server applications that run on Windows, Linux and Mac. It does not currently support creating desktop applications with a user interface. Developers can write applications and libraries in VB.NET, C# and F# in both runtimes.
<br>
<br>
<b>
    6. Open the Person object in the Models Folder. The properties FirstName and LastName have square brackets above them. These statements have a name, what is it? What do these brackets do?<br>
    Ans
</b>- [Required] - Means this field reuired to be fill
<br>
 [StringLength(x)] - Number of character allowed
<br>
<br>
<b>
    7. Where do we store ‘static’ content in an MVC application?<br>
    Ans
</b> - The default directory is {content root}/wwwroot, but it can be changed via the UseWebRoot method.
<br>
<br>
<b>
    8 Describe the purpose of the Program.cs class in this project.<br>
    Ans
</b> - ASP.NET Core web application is actually a console project which starts executing from the entry point public static void Main() in Program class where we can create a host for the web application.
<br>
<br>
<b>
    9. Describe the purpose of the Startup.cs class in this project.<br>
    Ans
</b> - ASP.NET Core application must include Startup class. It is like Global.asax in the traditional .NET application. As the name suggests, it is executed first when the application starts.

The startup class can be configured using UseStartup<T>
    () method at the time of configuring the host in the Main() method of Program class as shown below.<br><br>

    <b>
        10. MVC Core applications can ‘host’ themselves: true of false.<br>
        Ans
    </b> - True. They can be host on windows.
    <br><br>
    <b>
        11. Name the language used to programmatically render HTML in MVC applications.<br>
        Ans
    </b> - ASP.NET is the language used to programmatically render HTML in MVC applications
    <br><br>
    <b>
        12. Mention two ways of passing data from controller to view.<br>
        Ans
    </b> - ViewData - We pass data in ViewData which is a dictionary. In this, we store information in a key-value manner. We set value in<br>
    ex - ViewData["Studentinfo"] = "Student Number"<br>
    ViewBag - In this, you can assign a dynamic property name with value. But in this also we don’t have intellisense and you can easily misspelled name or key of that. If you assign any object to ViewBag then their properties easily resolve. No need to explicitly cast that.
    <br> ex - ViewBag.studentinfo="Student Number"<br>
    <br /><br /><br />
